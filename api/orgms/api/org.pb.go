// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/orgms/api/org.proto

package api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	rpc "uims/api/ums/rpc"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyName string     `protobuf:"bytes,1,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CompanyCode string     `protobuf:"bytes,2,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`
	CompanyType int64      `protobuf:"varint,3,opt,name=company_type,json=companyType,proto3" json:"company_type,omitempty"`
	CompanyDesc string     `protobuf:"bytes,4,opt,name=company_desc,json=companyDesc,proto3" json:"company_desc,omitempty"`
	IsVirtual   int64      `protobuf:"varint,5,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	Status      int64      `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	StartTime   int64      `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     int64      `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Ext         []*AttrReq `protobuf:"bytes,9,rep,name=ext,proto3" json:"ext,omitempty"`
}

func (x *CreateCompanyReq) Reset() {
	*x = CreateCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyReq) ProtoMessage() {}

func (x *CreateCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyReq.ProtoReflect.Descriptor instead.
func (*CreateCompanyReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCompanyReq) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CreateCompanyReq) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *CreateCompanyReq) GetCompanyType() int64 {
	if x != nil {
		return x.CompanyType
	}
	return 0
}

func (x *CreateCompanyReq) GetCompanyDesc() string {
	if x != nil {
		return x.CompanyDesc
	}
	return ""
}

func (x *CreateCompanyReq) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *CreateCompanyReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateCompanyReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CreateCompanyReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CreateCompanyReq) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

type CreateCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CompanyInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCompanyReply) Reset() {
	*x = CreateCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyReply) ProtoMessage() {}

func (x *CreateCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyReply.ProtoReflect.Descriptor instead.
func (*CreateCompanyReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCompanyReply) GetData() *CompanyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type AttrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrName  int64  `protobuf:"varint,1,opt,name=attr_name,json=attrName,proto3" json:"attr_name,omitempty"`
	AttrValue string `protobuf:"bytes,2,opt,name=attr_value,json=attrValue,proto3" json:"attr_value,omitempty"`
}

func (x *AttrReq) Reset() {
	*x = AttrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrReq) ProtoMessage() {}

func (x *AttrReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrReq.ProtoReflect.Descriptor instead.
func (*AttrReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{2}
}

func (x *AttrReq) GetAttrName() int64 {
	if x != nil {
		return x.AttrName
	}
	return 0
}

func (x *AttrReq) GetAttrValue() string {
	if x != nil {
		return x.AttrValue
	}
	return ""
}

type BatchCreateCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyList []*CreateCompanyReq `protobuf:"bytes,1,rep,name=company_list,json=companyList,proto3" json:"company_list,omitempty"`
}

func (x *BatchCreateCompanyReq) Reset() {
	*x = BatchCreateCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateCompanyReq) ProtoMessage() {}

func (x *BatchCreateCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateCompanyReq.ProtoReflect.Descriptor instead.
func (*BatchCreateCompanyReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{3}
}

func (x *BatchCreateCompanyReq) GetCompanyList() []*CreateCompanyReq {
	if x != nil {
		return x.CompanyList
	}
	return nil
}

type BatchCreateCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  map[int64]*CompanyInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *BatchCreateCompanyReply) Reset() {
	*x = BatchCreateCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateCompanyReply) ProtoMessage() {}

func (x *BatchCreateCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateCompanyReply.ProtoReflect.Descriptor instead.
func (*BatchCreateCompanyReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{4}
}

func (x *BatchCreateCompanyReply) GetData() map[int64]*CompanyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BatchCreateCompanyReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetCompanyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  int64 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *GetCompanyListReq) Reset() {
	*x = GetCompanyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyListReq) ProtoMessage() {}

func (x *GetCompanyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyListReq.ProtoReflect.Descriptor instead.
func (*GetCompanyListReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{5}
}

func (x *GetCompanyListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetCompanyListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type GetCompanyListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []*CompanyInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total    int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize int64          `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  int64          `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *GetCompanyListReply) Reset() {
	*x = GetCompanyListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyListReply) ProtoMessage() {}

func (x *GetCompanyListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyListReply.ProtoReflect.Descriptor instead.
func (*GetCompanyListReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{6}
}

func (x *GetCompanyListReply) GetData() []*CompanyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetCompanyListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetCompanyListReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetCompanyListReply) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type GetCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetCompanyReq) Reset() {
	*x = GetCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyReq) ProtoMessage() {}

func (x *GetCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyReq.ProtoReflect.Descriptor instead.
func (*GetCompanyReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{7}
}

func (x *GetCompanyReq) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type GetCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CompanyInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCompanyReply) Reset() {
	*x = GetCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyReply) ProtoMessage() {}

func (x *GetCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyReply.ProtoReflect.Descriptor instead.
func (*GetCompanyReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{8}
}

func (x *GetCompanyReply) GetData() *CompanyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CompanyInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCompanyReq) Reset() {
	*x = UpdateCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyReq) ProtoMessage() {}

func (x *UpdateCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyReq.ProtoReflect.Descriptor instead.
func (*UpdateCompanyReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCompanyReq) GetData() *CompanyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CompanyInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCompanyReply) Reset() {
	*x = UpdateCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyReply) ProtoMessage() {}

func (x *UpdateCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyReply.ProtoReflect.Descriptor instead.
func (*UpdateCompanyReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCompanyReply) GetData() *CompanyInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DelCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *DelCompanyReq) Reset() {
	*x = DelCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCompanyReq) ProtoMessage() {}

func (x *DelCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCompanyReq.ProtoReflect.Descriptor instead.
func (*DelCompanyReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{11}
}

func (x *DelCompanyReq) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type DelCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *DelCompanyReply) Reset() {
	*x = DelCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCompanyReply) ProtoMessage() {}

func (x *DelCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCompanyReply.ProtoReflect.Descriptor instead.
func (*DelCompanyReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{12}
}

func (x *DelCompanyReply) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type OrderCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyIds []int64 `protobuf:"varint,1,rep,packed,name=company_ids,json=companyIds,proto3" json:"company_ids,omitempty"`
}

func (x *OrderCompanyReq) Reset() {
	*x = OrderCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCompanyReq) ProtoMessage() {}

func (x *OrderCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCompanyReq.ProtoReflect.Descriptor instead.
func (*OrderCompanyReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{13}
}

func (x *OrderCompanyReq) GetCompanyIds() []int64 {
	if x != nil {
		return x.CompanyIds
	}
	return nil
}

type OrderCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int64 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderCompanyReply) Reset() {
	*x = OrderCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCompanyReply) ProtoMessage() {}

func (x *OrderCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCompanyReply.ProtoReflect.Descriptor instead.
func (*OrderCompanyReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{14}
}

func (x *OrderCompanyReply) GetData() []int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type CompanyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId   int64      `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyName string     `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	CompanyCode string     `protobuf:"bytes,3,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`
	CompanyType int64      `protobuf:"varint,4,opt,name=company_type,json=companyType,proto3" json:"company_type,omitempty"`
	CompanyDesc string     `protobuf:"bytes,5,opt,name=company_desc,json=companyDesc,proto3" json:"company_desc,omitempty"`
	Seq         int64      `protobuf:"varint,6,opt,name=seq,proto3" json:"seq,omitempty"`
	IsVirtual   int64      `protobuf:"varint,7,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	DelFlag     int64      `protobuf:"varint,8,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	StartTime   int64      `protobuf:"varint,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     int64      `protobuf:"varint,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CreatedAt   int64      `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64      `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Ext         []*AttrReq `protobuf:"bytes,13,rep,name=ext,proto3" json:"ext,omitempty"`
}

func (x *CompanyInfo) Reset() {
	*x = CompanyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyInfo) ProtoMessage() {}

func (x *CompanyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyInfo.ProtoReflect.Descriptor instead.
func (*CompanyInfo) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{15}
}

func (x *CompanyInfo) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CompanyInfo) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CompanyInfo) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

func (x *CompanyInfo) GetCompanyType() int64 {
	if x != nil {
		return x.CompanyType
	}
	return 0
}

func (x *CompanyInfo) GetCompanyDesc() string {
	if x != nil {
		return x.CompanyDesc
	}
	return ""
}

func (x *CompanyInfo) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *CompanyInfo) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *CompanyInfo) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *CompanyInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CompanyInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CompanyInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CompanyInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CompanyInfo) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

type CreateDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId      int64      `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DepartmentName string     `protobuf:"bytes,2,opt,name=department_name,json=departmentName,proto3" json:"department_name,omitempty"`
	DepartmentDesc string     `protobuf:"bytes,3,opt,name=department_desc,json=departmentDesc,proto3" json:"department_desc,omitempty"`
	DepartmentType int64      `protobuf:"varint,4,opt,name=department_type,json=departmentType,proto3" json:"department_type,omitempty"`
	StartTime      int64      `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        int64      `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Status         int64      `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	IsVirtual      int64      `protobuf:"varint,8,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	ParentId       int64      `protobuf:"varint,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Ext            []*AttrReq `protobuf:"bytes,10,rep,name=ext,proto3" json:"ext,omitempty"`
}

func (x *CreateDepartmentReq) Reset() {
	*x = CreateDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentReq) ProtoMessage() {}

func (x *CreateDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentReq.ProtoReflect.Descriptor instead.
func (*CreateDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{16}
}

func (x *CreateDepartmentReq) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CreateDepartmentReq) GetDepartmentName() string {
	if x != nil {
		return x.DepartmentName
	}
	return ""
}

func (x *CreateDepartmentReq) GetDepartmentDesc() string {
	if x != nil {
		return x.DepartmentDesc
	}
	return ""
}

func (x *CreateDepartmentReq) GetDepartmentType() int64 {
	if x != nil {
		return x.DepartmentType
	}
	return 0
}

func (x *CreateDepartmentReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CreateDepartmentReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CreateDepartmentReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateDepartmentReq) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *CreateDepartmentReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateDepartmentReq) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

type CreateDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DepartmentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDepartmentReply) Reset() {
	*x = CreateDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDepartmentReply) ProtoMessage() {}

func (x *CreateDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDepartmentReply.ProtoReflect.Descriptor instead.
func (*CreateDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{17}
}

func (x *CreateDepartmentReply) GetData() *DepartmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchCreateDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentList []*CreateDepartmentReq `protobuf:"bytes,1,rep,name=department_list,json=departmentList,proto3" json:"department_list,omitempty"`
}

func (x *BatchCreateDepartmentReq) Reset() {
	*x = BatchCreateDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateDepartmentReq) ProtoMessage() {}

func (x *BatchCreateDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateDepartmentReq.ProtoReflect.Descriptor instead.
func (*BatchCreateDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{18}
}

func (x *BatchCreateDepartmentReq) GetDepartmentList() []*CreateDepartmentReq {
	if x != nil {
		return x.DepartmentList
	}
	return nil
}

type BatchCreateDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[int64]*DepartmentInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchCreateDepartmentReply) Reset() {
	*x = BatchCreateDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateDepartmentReply) ProtoMessage() {}

func (x *BatchCreateDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateDepartmentReply.ProtoReflect.Descriptor instead.
func (*BatchCreateDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{19}
}

func (x *BatchCreateDepartmentReply) GetData() map[int64]*DepartmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId      int64      `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DepartmentName string     `protobuf:"bytes,2,opt,name=department_name,json=departmentName,proto3" json:"department_name,omitempty"`
	DepartmentDesc string     `protobuf:"bytes,3,opt,name=department_desc,json=departmentDesc,proto3" json:"department_desc,omitempty"`
	DepartmentType int64      `protobuf:"varint,4,opt,name=department_type,json=departmentType,proto3" json:"department_type,omitempty"`
	StartTime      int64      `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        int64      `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Status         int64      `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	IsVirtual      int64      `protobuf:"varint,8,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	ParentId       int64      `protobuf:"varint,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Ext            []*AttrReq `protobuf:"bytes,10,rep,name=ext,proto3" json:"ext,omitempty"`
}

func (x *UpdateDepartmentReq) Reset() {
	*x = UpdateDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepartmentReq) ProtoMessage() {}

func (x *UpdateDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepartmentReq.ProtoReflect.Descriptor instead.
func (*UpdateDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateDepartmentReq) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *UpdateDepartmentReq) GetDepartmentName() string {
	if x != nil {
		return x.DepartmentName
	}
	return ""
}

func (x *UpdateDepartmentReq) GetDepartmentDesc() string {
	if x != nil {
		return x.DepartmentDesc
	}
	return ""
}

func (x *UpdateDepartmentReq) GetDepartmentType() int64 {
	if x != nil {
		return x.DepartmentType
	}
	return 0
}

func (x *UpdateDepartmentReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UpdateDepartmentReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *UpdateDepartmentReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateDepartmentReq) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *UpdateDepartmentReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateDepartmentReq) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

type UpdateDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DepartmentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateDepartmentReply) Reset() {
	*x = UpdateDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDepartmentReply) ProtoMessage() {}

func (x *UpdateDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDepartmentReply.ProtoReflect.Descriptor instead.
func (*UpdateDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateDepartmentReply) GetData() *DepartmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId int64 `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *GetDepartmentReq) Reset() {
	*x = GetDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentReq) ProtoMessage() {}

func (x *GetDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{22}
}

func (x *GetDepartmentReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

type GetDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DepartmentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDepartmentReply) Reset() {
	*x = GetDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentReply) ProtoMessage() {}

func (x *GetDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentReply.ProtoReflect.Descriptor instead.
func (*GetDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{23}
}

func (x *GetDepartmentReply) GetData() *DepartmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDepartmentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  int64 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *GetDepartmentListReq) Reset() {
	*x = GetDepartmentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentListReq) ProtoMessage() {}

func (x *GetDepartmentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentListReq.ProtoReflect.Descriptor instead.
func (*GetDepartmentListReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{24}
}

func (x *GetDepartmentListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDepartmentListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type GetDepartmentListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []*DepartmentInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total    int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize int64             `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  int64             `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *GetDepartmentListReply) Reset() {
	*x = GetDepartmentListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepartmentListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepartmentListReply) ProtoMessage() {}

func (x *GetDepartmentListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepartmentListReply.ProtoReflect.Descriptor instead.
func (*GetDepartmentListReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{25}
}

func (x *GetDepartmentListReply) GetData() []*DepartmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetDepartmentListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetDepartmentListReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDepartmentListReply) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type DelDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId int64 `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *DelDepartmentReq) Reset() {
	*x = DelDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDepartmentReq) ProtoMessage() {}

func (x *DelDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDepartmentReq.ProtoReflect.Descriptor instead.
func (*DelDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{26}
}

func (x *DelDepartmentReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

type DelDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId int64 `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *DelDepartmentReply) Reset() {
	*x = DelDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDepartmentReply) ProtoMessage() {}

func (x *DelDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDepartmentReply.ProtoReflect.Descriptor instead.
func (*DelDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{27}
}

func (x *DelDepartmentReply) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

type AssignDepartmentUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId int64   `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Uids         []int64 `protobuf:"varint,2,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *AssignDepartmentUserReq) Reset() {
	*x = AssignDepartmentUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignDepartmentUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDepartmentUserReq) ProtoMessage() {}

func (x *AssignDepartmentUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDepartmentUserReq.ProtoReflect.Descriptor instead.
func (*AssignDepartmentUserReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{28}
}

func (x *AssignDepartmentUserReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *AssignDepartmentUserReq) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

type AssignDepartmentUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId int64   `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Uids         []int64 `protobuf:"varint,2,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *AssignDepartmentUserReply) Reset() {
	*x = AssignDepartmentUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignDepartmentUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDepartmentUserReply) ProtoMessage() {}

func (x *AssignDepartmentUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDepartmentUserReply.ProtoReflect.Descriptor instead.
func (*AssignDepartmentUserReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{29}
}

func (x *AssignDepartmentUserReply) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *AssignDepartmentUserReply) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

type MoveDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId int64 `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	FromParentId int64 `protobuf:"varint,2,opt,name=from_parent_id,json=fromParentId,proto3" json:"from_parent_id,omitempty"`
	ToParentId   int64 `protobuf:"varint,3,opt,name=to_parent_id,json=toParentId,proto3" json:"to_parent_id,omitempty"`
}

func (x *MoveDepartmentReq) Reset() {
	*x = MoveDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveDepartmentReq) ProtoMessage() {}

func (x *MoveDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveDepartmentReq.ProtoReflect.Descriptor instead.
func (*MoveDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{30}
}

func (x *MoveDepartmentReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *MoveDepartmentReq) GetFromParentId() int64 {
	if x != nil {
		return x.FromParentId
	}
	return 0
}

func (x *MoveDepartmentReq) GetToParentId() int64 {
	if x != nil {
		return x.ToParentId
	}
	return 0
}

type MoveDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DepartmentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MoveDepartmentReply) Reset() {
	*x = MoveDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveDepartmentReply) ProtoMessage() {}

func (x *MoveDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveDepartmentReply.ProtoReflect.Descriptor instead.
func (*MoveDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{31}
}

func (x *MoveDepartmentReply) GetData() *DepartmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type MergeDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId   int64 `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	ToDepartmentId int64 `protobuf:"varint,2,opt,name=to_department_id,json=toDepartmentId,proto3" json:"to_department_id,omitempty"`
}

func (x *MergeDepartmentReq) Reset() {
	*x = MergeDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDepartmentReq) ProtoMessage() {}

func (x *MergeDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDepartmentReq.ProtoReflect.Descriptor instead.
func (*MergeDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{32}
}

func (x *MergeDepartmentReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *MergeDepartmentReq) GetToDepartmentId() int64 {
	if x != nil {
		return x.ToDepartmentId
	}
	return 0
}

type MergeDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DepartmentInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MergeDepartmentReply) Reset() {
	*x = MergeDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDepartmentReply) ProtoMessage() {}

func (x *MergeDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDepartmentReply.ProtoReflect.Descriptor instead.
func (*MergeDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{33}
}

func (x *MergeDepartmentReply) GetData() *DepartmentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderDepartmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId      int64   `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	DepartmentIds []int64 `protobuf:"varint,2,rep,packed,name=department_ids,json=departmentIds,proto3" json:"department_ids,omitempty"`
}

func (x *OrderDepartmentReq) Reset() {
	*x = OrderDepartmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDepartmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDepartmentReq) ProtoMessage() {}

func (x *OrderDepartmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDepartmentReq.ProtoReflect.Descriptor instead.
func (*OrderDepartmentReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{34}
}

func (x *OrderDepartmentReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *OrderDepartmentReq) GetDepartmentIds() []int64 {
	if x != nil {
		return x.DepartmentIds
	}
	return nil
}

type OrderDepartmentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int64 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *OrderDepartmentReply) Reset() {
	*x = OrderDepartmentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDepartmentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDepartmentReply) ProtoMessage() {}

func (x *OrderDepartmentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDepartmentReply.ProtoReflect.Descriptor instead.
func (*OrderDepartmentReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{35}
}

func (x *OrderDepartmentReply) GetData() []int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type DepartmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentId   int64      `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	DepartmentName string     `protobuf:"bytes,2,opt,name=department_name,json=departmentName,proto3" json:"department_name,omitempty"`
	DepartmentDesc string     `protobuf:"bytes,3,opt,name=department_desc,json=departmentDesc,proto3" json:"department_desc,omitempty"`
	DepartmentType int64      `protobuf:"varint,4,opt,name=department_type,json=departmentType,proto3" json:"department_type,omitempty"`
	IsVirtual      int64      `protobuf:"varint,5,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	ParentId       int64      `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	CompanyId      int64      `protobuf:"varint,7,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Depth          int64      `protobuf:"varint,8,opt,name=depth,proto3" json:"depth,omitempty"`
	Seq            int64      `protobuf:"varint,9,opt,name=seq,proto3" json:"seq,omitempty"`
	Status         int64      `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	StartTime      int64      `protobuf:"varint,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        int64      `protobuf:"varint,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CreatedAt      int64      `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64      `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Ext            []*AttrReq `protobuf:"bytes,15,rep,name=ext,proto3" json:"ext,omitempty"`
}

func (x *DepartmentInfo) Reset() {
	*x = DepartmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentInfo) ProtoMessage() {}

func (x *DepartmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentInfo.ProtoReflect.Descriptor instead.
func (*DepartmentInfo) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{36}
}

func (x *DepartmentInfo) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *DepartmentInfo) GetDepartmentName() string {
	if x != nil {
		return x.DepartmentName
	}
	return ""
}

func (x *DepartmentInfo) GetDepartmentDesc() string {
	if x != nil {
		return x.DepartmentDesc
	}
	return ""
}

func (x *DepartmentInfo) GetDepartmentType() int64 {
	if x != nil {
		return x.DepartmentType
	}
	return 0
}

func (x *DepartmentInfo) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *DepartmentInfo) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DepartmentInfo) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *DepartmentInfo) GetDepth() int64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *DepartmentInfo) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *DepartmentInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DepartmentInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DepartmentInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DepartmentInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DepartmentInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *DepartmentInfo) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId    int64      `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DepartmentId int64      `protobuf:"varint,2,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	IsAdmin      int64      `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsVirtual    int64      `protobuf:"varint,4,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	Phone        int64      `protobuf:"varint,5,opt,name=phone,proto3" json:"phone,omitempty"`
	RealName     string     `protobuf:"bytes,6,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	Email        string     `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Ext          []*AttrReq `protobuf:"bytes,8,rep,name=ext,proto3" json:"ext,omitempty"`
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{37}
}

func (x *CreateUserReq) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CreateUserReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *CreateUserReq) GetIsAdmin() int64 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *CreateUserReq) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *CreateUserReq) GetPhone() int64 {
	if x != nil {
		return x.Phone
	}
	return 0
}

func (x *CreateUserReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *CreateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserReq) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

type CreateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *UserInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateUserReply) Reset() {
	*x = CreateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReply) ProtoMessage() {}

func (x *CreateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReply.ProtoReflect.Descriptor instead.
func (*CreateUserReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{38}
}

func (x *CreateUserReply) GetData() *UserInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchCreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList []*CreateUserReq `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
}

func (x *BatchCreateUserReq) Reset() {
	*x = BatchCreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateUserReq) ProtoMessage() {}

func (x *BatchCreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateUserReq.ProtoReflect.Descriptor instead.
func (*BatchCreateUserReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{39}
}

func (x *BatchCreateUserReq) GetUserList() []*CreateUserReq {
	if x != nil {
		return x.UserList
	}
	return nil
}

type BatchCreateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[int64]*CreateUserReq `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchCreateUserReply) Reset() {
	*x = BatchCreateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateUserReply) ProtoMessage() {}

func (x *BatchCreateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateUserReply.ProtoReflect.Descriptor instead.
func (*BatchCreateUserReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{40}
}

func (x *BatchCreateUserReply) GetData() map[int64]*CreateUserReq {
	if x != nil {
		return x.Data
	}
	return nil
}

type DelUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DelUserReq) Reset() {
	*x = DelUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserReq) ProtoMessage() {}

func (x *DelUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserReq.ProtoReflect.Descriptor instead.
func (*DelUserReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{41}
}

func (x *DelUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type DelUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DelUserReply) Reset() {
	*x = DelUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserReply) ProtoMessage() {}

func (x *DelUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserReply.ProtoReflect.Descriptor instead.
func (*DelUserReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{42}
}

func (x *DelUserReply) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64      `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CompanyId    int64      `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DepartmentId int64      `protobuf:"varint,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	IsAdmin      int64      `protobuf:"varint,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsVirtual    int64      `protobuf:"varint,5,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	Phone        int64      `protobuf:"varint,6,opt,name=phone,proto3" json:"phone,omitempty"`
	RealName     string     `protobuf:"bytes,7,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	Email        string     `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Ext          []*AttrReq `protobuf:"bytes,9,rep,name=ext,proto3" json:"ext,omitempty"`
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateUserReq) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *UpdateUserReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *UpdateUserReq) GetIsAdmin() int64 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *UpdateUserReq) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *UpdateUserReq) GetPhone() int64 {
	if x != nil {
		return x.Phone
	}
	return 0
}

func (x *UpdateUserReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UpdateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserReq) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

type UpdateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList []*CreateUserReq `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
}

func (x *UpdateUserReply) Reset() {
	*x = UpdateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReply) ProtoMessage() {}

func (x *UpdateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReply.ProtoReflect.Descriptor instead.
func (*UpdateUserReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateUserReply) GetUserList() []*CreateUserReq {
	if x != nil {
		return x.UserList
	}
	return nil
}

type GetUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserReq) Reset() {
	*x = GetUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReq) ProtoMessage() {}

func (x *GetUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReq.ProtoReflect.Descriptor instead.
func (*GetUserReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{45}
}

func (x *GetUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList []*CreateUserReq `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
}

func (x *GetUserReply) Reset() {
	*x = GetUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReply) ProtoMessage() {}

func (x *GetUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReply.ProtoReflect.Descriptor instead.
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{46}
}

func (x *GetUserReply) GetUserList() []*CreateUserReq {
	if x != nil {
		return x.UserList
	}
	return nil
}

type GetUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize     int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum      int64 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	DepartmentId int64 `protobuf:"varint,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
}

func (x *GetUserListReq) Reset() {
	*x = GetUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListReq) ProtoMessage() {}

func (x *GetUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListReq.ProtoReflect.Descriptor instead.
func (*GetUserListReq) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{47}
}

func (x *GetUserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetUserListReq) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

type GetUserListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []*UserInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total    int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageSize int64       `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum  int64       `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *GetUserListReply) Reset() {
	*x = GetUserListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListReply) ProtoMessage() {}

func (x *GetUserListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListReply.ProtoReflect.Descriptor instead.
func (*GetUserListReply) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{48}
}

func (x *GetUserListReply) GetData() []*UserInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetUserListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserListReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserListReply) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo  *rpc.UserInfo       `protobuf:"bytes,1,opt,name=base_info,json=baseInfo,proto3" json:"base_info,omitempty"`
	ExtraInfo *UserInfo_ExtraInfo `protobuf:"bytes,2,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{49}
}

func (x *UserInfo) GetBaseInfo() *rpc.UserInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *UserInfo) GetExtraInfo() *UserInfo_ExtraInfo {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

type UserInfo_ExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsVirtual int64      `protobuf:"varint,1,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	AreaId    int64      `protobuf:"varint,2,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	DelFlag   int64      `protobuf:"varint,3,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	Ext       []*AttrReq `protobuf:"bytes,4,rep,name=ext,proto3" json:"ext,omitempty"`
	CreatedAt int64      `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64      `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UserInfo_ExtraInfo) Reset() {
	*x = UserInfo_ExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo_ExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo_ExtraInfo) ProtoMessage() {}

func (x *UserInfo_ExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo_ExtraInfo.ProtoReflect.Descriptor instead.
func (*UserInfo_ExtraInfo) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{49, 0}
}

func (x *UserInfo_ExtraInfo) GetIsVirtual() int64 {
	if x != nil {
		return x.IsVirtual
	}
	return 0
}

func (x *UserInfo_ExtraInfo) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *UserInfo_ExtraInfo) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *UserInfo_ExtraInfo) GetExt() []*AttrReq {
	if x != nil {
		return x.Ext
	}
	return nil
}

func (x *UserInfo_ExtraInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserInfo_ExtraInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type UserInfo_OrgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId    int64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	DepartmentId int64 `protobuf:"varint,2,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	IsAdmin      int64 `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsShow       int64 `protobuf:"varint,4,opt,name=is_show,json=isShow,proto3" json:"is_show,omitempty"`
	DelFlag      int64 `protobuf:"varint,5,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
}

func (x *UserInfo_OrgInfo) Reset() {
	*x = UserInfo_OrgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_orgms_api_org_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo_OrgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo_OrgInfo) ProtoMessage() {}

func (x *UserInfo_OrgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_orgms_api_org_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo_OrgInfo.ProtoReflect.Descriptor instead.
func (*UserInfo_OrgInfo) Descriptor() ([]byte, []int) {
	return file_api_orgms_api_org_proto_rawDescGZIP(), []int{49, 1}
}

func (x *UserInfo_OrgInfo) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *UserInfo_OrgInfo) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *UserInfo_OrgInfo) GetIsAdmin() int64 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *UserInfo_OrgInfo) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *UserInfo_OrgInfo) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

var File_api_orgms_api_org_proto protoreflect.FileDescriptor

var file_api_orgms_api_org_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x72, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x75, 0x69, 0x6d, 0x73, 0x2e,
	0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x6d, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x75, 0x6d,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2a,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x22, 0x06, 0x30, 0x00, 0x30, 0x01, 0x40, 0x01, 0x52,
	0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x22,
	0x06, 0x30, 0x00, 0x30, 0x01, 0x40, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x78, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72,
	0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52,
	0x03, 0x65, 0x78, 0x74, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e,
	0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x07, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x5c, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xcc, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x75, 0x69, 0x6d,
	0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x54, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f,
	0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x4b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x94, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x22, 0x2e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x69, 0x6d, 0x73,
	0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xa7, 0x03, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0xe8, 0x02, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x69, 0x6d, 0x73,
	0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x65, 0x71, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x4b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x4c, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x69, 0x6d, 0x73,
	0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x0e,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbf,
	0x01, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x75, 0x69,
	0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x57, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67,
	0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe8, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x4b, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67,
	0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x9a, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x37, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x39, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x17,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73,
	0x22, 0x54, 0x0a, 0x19, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x6f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x4d, 0x6f, 0x76,
	0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x12, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x14, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22,
	0x2a, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xee, 0x03, 0x0a, 0x0e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x81, 0x02, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x22, 0x3f, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x50, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x69, 0x6d,
	0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x75, 0x69, 0x6d,
	0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x56, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x22, 0x4d, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72,
	0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3a, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0xeb, 0x03, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x69,
	0x6d, 0x73, 0x2e, 0x75, 0x6d, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a,
	0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0xc7, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x9c, 0x01, 0x0a, 0x07, 0x4f,
	0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x32, 0xcf, 0x06, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x73, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72,
	0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e,
	0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x20, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x01, 0x2a,
	0x12, 0x73, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67,
	0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x12, 0x11, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x74, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x1d, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x75, 0x69,
	0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x7b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x73, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x2e, 0x75,
	0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x75, 0x69, 0x6d,
	0x73, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x3a, 0x01, 0x2a,
	0x12, 0x77, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x1d, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x75, 0x69, 0x6d, 0x73,
	0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2f, 0x7b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a, 0x0c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x2e, 0x75, 0x69, 0x6d, 0x73,
	0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x75, 0x69, 0x6d,
	0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x32, 0x11, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x3a, 0x01, 0x2a, 0x32, 0xe6, 0x0a, 0x0a, 0x0a,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x75,
	0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x75, 0x69, 0x6d,
	0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x7b, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f,
	0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x75, 0x69, 0x6d,
	0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f,
	0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75,
	0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x75, 0x69,
	0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x28, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x75, 0x69, 0x6d,
	0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c,
	0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x12,
	0x81, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x75, 0x69, 0x6d, 0x73,
	0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f,
	0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e,
	0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x75, 0x69, 0x6d,
	0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x2a, 0x26, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72,
	0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x92,
	0x01, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f,
	0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x32, 0x1b, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73,
	0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f,
	0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x75, 0x69,
	0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x32, 0x1c, 0x2f, 0x75, 0x69, 0x6d, 0x73,
	0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x4d,
	0x6f, 0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e,
	0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x32, 0x1b, 0x2f,
	0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x6f, 0x76, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01,
	0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67,
	0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x32, 0x1c, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73,
	0x2f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x3a, 0x01, 0x2a, 0x32, 0xc2, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x69, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x75, 0x69,
	0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x75, 0x69, 0x6d,
	0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x7e, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x75, 0x69,
	0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f,
	0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67,
	0x6d, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x2e, 0x75, 0x69, 0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x69,
	0x6d, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x12, 0x16, 0x2f, 0x75, 0x69, 0x6d, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x42, 0x14, 0x5a, 0x12, 0x75, 0x69, 0x6d,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x67, 0x6d, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_orgms_api_org_proto_rawDescOnce sync.Once
	file_api_orgms_api_org_proto_rawDescData = file_api_orgms_api_org_proto_rawDesc
)

func file_api_orgms_api_org_proto_rawDescGZIP() []byte {
	file_api_orgms_api_org_proto_rawDescOnce.Do(func() {
		file_api_orgms_api_org_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_orgms_api_org_proto_rawDescData)
	})
	return file_api_orgms_api_org_proto_rawDescData
}

var file_api_orgms_api_org_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_api_orgms_api_org_proto_goTypes = []interface{}{
	(*CreateCompanyReq)(nil),           // 0: uims.orgms.api.CreateCompanyReq
	(*CreateCompanyReply)(nil),         // 1: uims.orgms.api.CreateCompanyReply
	(*AttrReq)(nil),                    // 2: uims.orgms.api.AttrReq
	(*BatchCreateCompanyReq)(nil),      // 3: uims.orgms.api.BatchCreateCompanyReq
	(*BatchCreateCompanyReply)(nil),    // 4: uims.orgms.api.BatchCreateCompanyReply
	(*GetCompanyListReq)(nil),          // 5: uims.orgms.api.GetCompanyListReq
	(*GetCompanyListReply)(nil),        // 6: uims.orgms.api.GetCompanyListReply
	(*GetCompanyReq)(nil),              // 7: uims.orgms.api.GetCompanyReq
	(*GetCompanyReply)(nil),            // 8: uims.orgms.api.GetCompanyReply
	(*UpdateCompanyReq)(nil),           // 9: uims.orgms.api.UpdateCompanyReq
	(*UpdateCompanyReply)(nil),         // 10: uims.orgms.api.UpdateCompanyReply
	(*DelCompanyReq)(nil),              // 11: uims.orgms.api.DelCompanyReq
	(*DelCompanyReply)(nil),            // 12: uims.orgms.api.DelCompanyReply
	(*OrderCompanyReq)(nil),            // 13: uims.orgms.api.OrderCompanyReq
	(*OrderCompanyReply)(nil),          // 14: uims.orgms.api.OrderCompanyReply
	(*CompanyInfo)(nil),                // 15: uims.orgms.api.CompanyInfo
	(*CreateDepartmentReq)(nil),        // 16: uims.orgms.api.CreateDepartmentReq
	(*CreateDepartmentReply)(nil),      // 17: uims.orgms.api.CreateDepartmentReply
	(*BatchCreateDepartmentReq)(nil),   // 18: uims.orgms.api.BatchCreateDepartmentReq
	(*BatchCreateDepartmentReply)(nil), // 19: uims.orgms.api.BatchCreateDepartmentReply
	(*UpdateDepartmentReq)(nil),        // 20: uims.orgms.api.UpdateDepartmentReq
	(*UpdateDepartmentReply)(nil),      // 21: uims.orgms.api.UpdateDepartmentReply
	(*GetDepartmentReq)(nil),           // 22: uims.orgms.api.GetDepartmentReq
	(*GetDepartmentReply)(nil),         // 23: uims.orgms.api.GetDepartmentReply
	(*GetDepartmentListReq)(nil),       // 24: uims.orgms.api.GetDepartmentListReq
	(*GetDepartmentListReply)(nil),     // 25: uims.orgms.api.GetDepartmentListReply
	(*DelDepartmentReq)(nil),           // 26: uims.orgms.api.DelDepartmentReq
	(*DelDepartmentReply)(nil),         // 27: uims.orgms.api.DelDepartmentReply
	(*AssignDepartmentUserReq)(nil),    // 28: uims.orgms.api.AssignDepartmentUserReq
	(*AssignDepartmentUserReply)(nil),  // 29: uims.orgms.api.AssignDepartmentUserReply
	(*MoveDepartmentReq)(nil),          // 30: uims.orgms.api.MoveDepartmentReq
	(*MoveDepartmentReply)(nil),        // 31: uims.orgms.api.MoveDepartmentReply
	(*MergeDepartmentReq)(nil),         // 32: uims.orgms.api.MergeDepartmentReq
	(*MergeDepartmentReply)(nil),       // 33: uims.orgms.api.MergeDepartmentReply
	(*OrderDepartmentReq)(nil),         // 34: uims.orgms.api.OrderDepartmentReq
	(*OrderDepartmentReply)(nil),       // 35: uims.orgms.api.OrderDepartmentReply
	(*DepartmentInfo)(nil),             // 36: uims.orgms.api.DepartmentInfo
	(*CreateUserReq)(nil),              // 37: uims.orgms.api.CreateUserReq
	(*CreateUserReply)(nil),            // 38: uims.orgms.api.CreateUserReply
	(*BatchCreateUserReq)(nil),         // 39: uims.orgms.api.BatchCreateUserReq
	(*BatchCreateUserReply)(nil),       // 40: uims.orgms.api.BatchCreateUserReply
	(*DelUserReq)(nil),                 // 41: uims.orgms.api.DelUserReq
	(*DelUserReply)(nil),               // 42: uims.orgms.api.DelUserReply
	(*UpdateUserReq)(nil),              // 43: uims.orgms.api.UpdateUserReq
	(*UpdateUserReply)(nil),            // 44: uims.orgms.api.UpdateUserReply
	(*GetUserReq)(nil),                 // 45: uims.orgms.api.GetUserReq
	(*GetUserReply)(nil),               // 46: uims.orgms.api.GetUserReply
	(*GetUserListReq)(nil),             // 47: uims.orgms.api.GetUserListReq
	(*GetUserListReply)(nil),           // 48: uims.orgms.api.GetUserListReply
	(*UserInfo)(nil),                   // 49: uims.orgms.api.UserInfo
	nil,                                // 50: uims.orgms.api.BatchCreateCompanyReply.DataEntry
	nil,                                // 51: uims.orgms.api.BatchCreateDepartmentReply.DataEntry
	nil,                                // 52: uims.orgms.api.BatchCreateUserReply.DataEntry
	(*UserInfo_ExtraInfo)(nil),         // 53: uims.orgms.api.UserInfo.ExtraInfo
	(*UserInfo_OrgInfo)(nil),           // 54: uims.orgms.api.UserInfo.OrgInfo
	(*rpc.UserInfo)(nil),               // 55: uims.ums.rpc.UserInfo
}
var file_api_orgms_api_org_proto_depIdxs = []int32{
	2,  // 0: uims.orgms.api.CreateCompanyReq.ext:type_name -> uims.orgms.api.AttrReq
	15, // 1: uims.orgms.api.CreateCompanyReply.data:type_name -> uims.orgms.api.CompanyInfo
	0,  // 2: uims.orgms.api.BatchCreateCompanyReq.company_list:type_name -> uims.orgms.api.CreateCompanyReq
	50, // 3: uims.orgms.api.BatchCreateCompanyReply.data:type_name -> uims.orgms.api.BatchCreateCompanyReply.DataEntry
	15, // 4: uims.orgms.api.GetCompanyListReply.data:type_name -> uims.orgms.api.CompanyInfo
	15, // 5: uims.orgms.api.GetCompanyReply.data:type_name -> uims.orgms.api.CompanyInfo
	15, // 6: uims.orgms.api.UpdateCompanyReq.data:type_name -> uims.orgms.api.CompanyInfo
	15, // 7: uims.orgms.api.UpdateCompanyReply.data:type_name -> uims.orgms.api.CompanyInfo
	2,  // 8: uims.orgms.api.CompanyInfo.ext:type_name -> uims.orgms.api.AttrReq
	2,  // 9: uims.orgms.api.CreateDepartmentReq.ext:type_name -> uims.orgms.api.AttrReq
	36, // 10: uims.orgms.api.CreateDepartmentReply.data:type_name -> uims.orgms.api.DepartmentInfo
	16, // 11: uims.orgms.api.BatchCreateDepartmentReq.department_list:type_name -> uims.orgms.api.CreateDepartmentReq
	51, // 12: uims.orgms.api.BatchCreateDepartmentReply.data:type_name -> uims.orgms.api.BatchCreateDepartmentReply.DataEntry
	2,  // 13: uims.orgms.api.UpdateDepartmentReq.ext:type_name -> uims.orgms.api.AttrReq
	36, // 14: uims.orgms.api.UpdateDepartmentReply.data:type_name -> uims.orgms.api.DepartmentInfo
	36, // 15: uims.orgms.api.GetDepartmentReply.data:type_name -> uims.orgms.api.DepartmentInfo
	36, // 16: uims.orgms.api.GetDepartmentListReply.data:type_name -> uims.orgms.api.DepartmentInfo
	36, // 17: uims.orgms.api.MoveDepartmentReply.data:type_name -> uims.orgms.api.DepartmentInfo
	36, // 18: uims.orgms.api.MergeDepartmentReply.data:type_name -> uims.orgms.api.DepartmentInfo
	2,  // 19: uims.orgms.api.DepartmentInfo.ext:type_name -> uims.orgms.api.AttrReq
	2,  // 20: uims.orgms.api.CreateUserReq.ext:type_name -> uims.orgms.api.AttrReq
	49, // 21: uims.orgms.api.CreateUserReply.data:type_name -> uims.orgms.api.UserInfo
	37, // 22: uims.orgms.api.BatchCreateUserReq.user_list:type_name -> uims.orgms.api.CreateUserReq
	52, // 23: uims.orgms.api.BatchCreateUserReply.data:type_name -> uims.orgms.api.BatchCreateUserReply.DataEntry
	2,  // 24: uims.orgms.api.UpdateUserReq.ext:type_name -> uims.orgms.api.AttrReq
	37, // 25: uims.orgms.api.UpdateUserReply.user_list:type_name -> uims.orgms.api.CreateUserReq
	37, // 26: uims.orgms.api.GetUserReply.user_list:type_name -> uims.orgms.api.CreateUserReq
	49, // 27: uims.orgms.api.GetUserListReply.data:type_name -> uims.orgms.api.UserInfo
	55, // 28: uims.orgms.api.UserInfo.base_info:type_name -> uims.ums.rpc.UserInfo
	53, // 29: uims.orgms.api.UserInfo.extra_info:type_name -> uims.orgms.api.UserInfo.ExtraInfo
	15, // 30: uims.orgms.api.BatchCreateCompanyReply.DataEntry.value:type_name -> uims.orgms.api.CompanyInfo
	36, // 31: uims.orgms.api.BatchCreateDepartmentReply.DataEntry.value:type_name -> uims.orgms.api.DepartmentInfo
	37, // 32: uims.orgms.api.BatchCreateUserReply.DataEntry.value:type_name -> uims.orgms.api.CreateUserReq
	2,  // 33: uims.orgms.api.UserInfo.ExtraInfo.ext:type_name -> uims.orgms.api.AttrReq
	0,  // 34: uims.orgms.api.Company.CreateCompany:input_type -> uims.orgms.api.CreateCompanyReq
	0,  // 35: uims.orgms.api.Company.BatchCreateCompany:input_type -> uims.orgms.api.CreateCompanyReq
	5,  // 36: uims.orgms.api.Company.GetCompanyList:input_type -> uims.orgms.api.GetCompanyListReq
	7,  // 37: uims.orgms.api.Company.GetCompany:input_type -> uims.orgms.api.GetCompanyReq
	9,  // 38: uims.orgms.api.Company.UpdateCompany:input_type -> uims.orgms.api.UpdateCompanyReq
	11, // 39: uims.orgms.api.Company.DeleteCompany:input_type -> uims.orgms.api.DelCompanyReq
	13, // 40: uims.orgms.api.Company.OrderCompany:input_type -> uims.orgms.api.OrderCompanyReq
	22, // 41: uims.orgms.api.Department.GetDepartment:input_type -> uims.orgms.api.GetDepartmentReq
	24, // 42: uims.orgms.api.Department.GetDepartmentList:input_type -> uims.orgms.api.GetDepartmentListReq
	16, // 43: uims.orgms.api.Department.CreateDepartment:input_type -> uims.orgms.api.CreateDepartmentReq
	18, // 44: uims.orgms.api.Department.BatchCreateDepartment:input_type -> uims.orgms.api.BatchCreateDepartmentReq
	20, // 45: uims.orgms.api.Department.UpdateDepartment:input_type -> uims.orgms.api.UpdateDepartmentReq
	26, // 46: uims.orgms.api.Department.DeleteDepartment:input_type -> uims.orgms.api.DelDepartmentReq
	28, // 47: uims.orgms.api.Department.AssignDepartmentUser:input_type -> uims.orgms.api.AssignDepartmentUserReq
	34, // 48: uims.orgms.api.Department.OrderDepartment:input_type -> uims.orgms.api.OrderDepartmentReq
	30, // 49: uims.orgms.api.Department.MoveDepartment:input_type -> uims.orgms.api.MoveDepartmentReq
	32, // 50: uims.orgms.api.Department.MergeDepartment:input_type -> uims.orgms.api.MergeDepartmentReq
	37, // 51: uims.orgms.api.User.CreateUser:input_type -> uims.orgms.api.CreateUserReq
	39, // 52: uims.orgms.api.User.BatchCreateUser:input_type -> uims.orgms.api.BatchCreateUserReq
	41, // 53: uims.orgms.api.User.DelUser:input_type -> uims.orgms.api.DelUserReq
	45, // 54: uims.orgms.api.User.GetUserInfoReq:input_type -> uims.orgms.api.GetUserReq
	1,  // 55: uims.orgms.api.Company.CreateCompany:output_type -> uims.orgms.api.CreateCompanyReply
	4,  // 56: uims.orgms.api.Company.BatchCreateCompany:output_type -> uims.orgms.api.BatchCreateCompanyReply
	6,  // 57: uims.orgms.api.Company.GetCompanyList:output_type -> uims.orgms.api.GetCompanyListReply
	8,  // 58: uims.orgms.api.Company.GetCompany:output_type -> uims.orgms.api.GetCompanyReply
	10, // 59: uims.orgms.api.Company.UpdateCompany:output_type -> uims.orgms.api.UpdateCompanyReply
	12, // 60: uims.orgms.api.Company.DeleteCompany:output_type -> uims.orgms.api.DelCompanyReply
	14, // 61: uims.orgms.api.Company.OrderCompany:output_type -> uims.orgms.api.OrderCompanyReply
	23, // 62: uims.orgms.api.Department.GetDepartment:output_type -> uims.orgms.api.GetDepartmentReply
	6,  // 63: uims.orgms.api.Department.GetDepartmentList:output_type -> uims.orgms.api.GetCompanyListReply
	17, // 64: uims.orgms.api.Department.CreateDepartment:output_type -> uims.orgms.api.CreateDepartmentReply
	19, // 65: uims.orgms.api.Department.BatchCreateDepartment:output_type -> uims.orgms.api.BatchCreateDepartmentReply
	21, // 66: uims.orgms.api.Department.UpdateDepartment:output_type -> uims.orgms.api.UpdateDepartmentReply
	27, // 67: uims.orgms.api.Department.DeleteDepartment:output_type -> uims.orgms.api.DelDepartmentReply
	29, // 68: uims.orgms.api.Department.AssignDepartmentUser:output_type -> uims.orgms.api.AssignDepartmentUserReply
	35, // 69: uims.orgms.api.Department.OrderDepartment:output_type -> uims.orgms.api.OrderDepartmentReply
	31, // 70: uims.orgms.api.Department.MoveDepartment:output_type -> uims.orgms.api.MoveDepartmentReply
	33, // 71: uims.orgms.api.Department.MergeDepartment:output_type -> uims.orgms.api.MergeDepartmentReply
	38, // 72: uims.orgms.api.User.CreateUser:output_type -> uims.orgms.api.CreateUserReply
	40, // 73: uims.orgms.api.User.BatchCreateUser:output_type -> uims.orgms.api.BatchCreateUserReply
	42, // 74: uims.orgms.api.User.DelUser:output_type -> uims.orgms.api.DelUserReply
	46, // 75: uims.orgms.api.User.GetUserInfoReq:output_type -> uims.orgms.api.GetUserReply
	55, // [55:76] is the sub-list for method output_type
	34, // [34:55] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_api_orgms_api_org_proto_init() }
func file_api_orgms_api_org_proto_init() {
	if File_api_orgms_api_org_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_orgms_api_org_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepartmentListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignDepartmentUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignDepartmentUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDepartmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDepartmentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo_ExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_orgms_api_org_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo_OrgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_orgms_api_org_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_orgms_api_org_proto_goTypes,
		DependencyIndexes: file_api_orgms_api_org_proto_depIdxs,
		MessageInfos:      file_api_orgms_api_org_proto_msgTypes,
	}.Build()
	File_api_orgms_api_org_proto = out.File
	file_api_orgms_api_org_proto_rawDesc = nil
	file_api_orgms_api_org_proto_goTypes = nil
	file_api_orgms_api_org_proto_depIdxs = nil
}
