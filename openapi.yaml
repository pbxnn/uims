# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/apps/protoc-gen-openapi

openapi: 3.0.3
info:
    title: User API
    version: 0.0.1
paths:
    /ums/user/create:
        post:
            tags:
                - User
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserReply'
    /ums/user/list:
        get:
            tags:
                - User
            operationId: User_ListUser
            parameters:
                - name: uid
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: pageNum
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: status
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: delFlag
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: username
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserReply'
    /ums/user/save:
        post:
            tags:
                - User
            operationId: User_Save
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SaveUserReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SaveUserReply'
    /ums/user/{uid}:
        get:
            tags:
                - User
            operationId: User_GetUser
            parameters:
                - name: uid
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserReply'
    /ums/user/{username}:
        get:
            tags:
                - User
            operationId: User_GetUserByUsername
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserByUsernameReply'
components:
    schemas:
        CreateUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                username:
                    type: string
        CreateUserReq:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        GetUserByUsernameReply:
            type: object
            properties:
                userInfo:
                    $ref: '#/components/schemas/UserInfo'
        GetUserReply:
            type: object
            properties:
                userInfo:
                    $ref: '#/components/schemas/UserInfo'
        ListUserReply:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
        SaveUserReply:
            type: object
            properties:
                userInfo:
                    $ref: '#/components/schemas/UserInfo'
        SaveUserReq:
            type: object
            properties:
                username:
                    type: string
        UserInfo:
            type: object
            properties:
                uid:
                    type: integer
                    format: int64
                realName:
                    type: string
                userName:
                    type: string
                phone:
                    type: integer
                    format: int64
                avatar:
                    type: string
                delFlag:
                    type: integer
                    format: int64
                status:
                    type: integer
                    format: int64
                originAppId:
                    type: integer
                    format: int64
                createdAt:
                    type: string
                    format: RFC3339
                updatedAt:
                    type: string
                    format: RFC3339
tags:
    - name: User
