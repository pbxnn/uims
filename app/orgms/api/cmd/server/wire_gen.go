// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"uims/app/orgms/api/internal/biz"
	"uims/app/orgms/api/internal/conf"
	"uims/app/orgms/api/internal/data"
	"uims/app/orgms/api/internal/server"
	"uims/app/orgms/api/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, registry *conf.Registry, confData *conf.Data, kafkaProducer *conf.KafkaProducer, logger log.Logger) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(registry)
	companyClient := data.NewCompanyClient(discovery)
	companyDO := biz.NewCompanyDO(companyClient, logger)
	kafkaPubClient := server.NewKafkaProducer(kafkaProducer)
	companyService := service.NewCompanyService(companyDO, kafkaPubClient, logger)
	departmentService := service.NewDepartmentService()
	userService := service.NewUserService()
	httpServer := server.NewHTTPServer(confServer, companyService, departmentService, userService, logger)
	registrar := server.NewRegistrar(registry)
	app := newApp(logger, httpServer, registrar)
	return app, func() {
	}, nil
}
